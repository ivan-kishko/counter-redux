{"version":3,"sources":["components/common/Containers.module.css","components/Counter.module.css","components/common/SuperInput.module.css","components/common/ButtonComponent.module.css","components/Settings.module.css","redux/counter-reducer.ts","components/common/ButtonComponent.tsx","components/Counter.tsx","components/common/SuperInput.tsx","components/Settings.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","redux/utils/localstorage-utils.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","initState","minValue","maxValue","counter","setting_active","ButtonComponent","props","className","disabled","classes","button","buttonDisabled","onClick","callbackFn","title","Counter","state","useSelector","counterState","dispatch","useDispatch","errorText","Number","spanDisplay","errorRed","incButtonDisable","resetButtonDisable","displayClassName","commonClasses","upperContainer","error","displayContainer","mainContainer","bottomContainer","type","CHANGE_COUNTER_VALUE","RESET_COUNTER_VALUE","SuperInput","inputContainer","localInput","localInputError","value","data-value","dataValue","onChange","Settings","settings","changeValue","e","currentTarget","isFinite","dataset","trigger","CHANGE_MIN_VALUE","ChangeMinValue","CHANGE_MAX_VALUE","ChangeMaxValue","setButtonDisable","inputError","inputsContainer","SET_SETTINGS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b305b272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Containers_mainContainer__1PW_0\",\"upperContainer\":\"Containers_upperContainer__32kKN\",\"bottomContainer\":\"Containers_bottomContainer__1uYvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"Counter_displayContainer__2uqZV\",\"error\":\"Counter_error__3TvgI\",\"errorRed\":\"Counter_errorRed__2X7yj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"SuperInput_inputContainer__pUljn\",\"localInput\":\"SuperInput_localInput__plpTZ\",\"localInputError\":\"SuperInput_localInputError__2gtLa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonComponent_button__2p6n5\",\"buttonDisabled\":\"ButtonComponent_buttonDisabled__3TRlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputsContainer\":\"Settings_inputsContainer__jty3q\"};","//action types and action creators\r\nexport enum ACTIONS_TYPE {\r\n    CHANGE_MIN_VALUE = 'Counter/CHANGE_CHANGE_MIN_VALUE',\r\n    CHANGE_MAX_VALUE = 'Counter/CHANGE_CHANGE_MAX_VALUE',\r\n    CHANGE_COUNTER_VALUE = 'Counter/CHANGE_CHANGE_COUNTER_VALUE',\r\n    RESET_COUNTER_VALUE = 'Counter/RESET_COUNTER_VALUE',\r\n    SET_SETTINGS = 'Counter/SET_SETTINGS',\r\n}\r\n\r\nconst initState = {\r\n    minValue: '0',\r\n    maxValue: '5',\r\n    counter: 0,\r\n    setting_active: false\r\n}\r\n\r\nexport type InitStateType = {\r\n    minValue: string;\r\n    maxValue: string;\r\n    counter: number;\r\n    setting_active: boolean;\r\n}\r\n\r\nexport const counterReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.CHANGE_MIN_VALUE:\r\n            return {\r\n                ...state,\r\n                minValue: action.minValue,\r\n                setting_active: true\r\n            }\r\n        case ACTIONS_TYPE.CHANGE_MAX_VALUE:\r\n            return {\r\n                ...state,\r\n                maxValue: action.maxValue,\r\n                setting_active: true\r\n            }\r\n        case ACTIONS_TYPE.CHANGE_COUNTER_VALUE:\r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1\r\n            }\r\n        case ACTIONS_TYPE.RESET_COUNTER_VALUE:\r\n            return {\r\n                ...state,\r\n                counter: Number(state.minValue)\r\n            }\r\n        case ACTIONS_TYPE.SET_SETTINGS:\r\n            return {\r\n                ...state,\r\n                counter: Number(state.minValue),\r\n                setting_active: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ChangeMinValueType = {\r\n    type: ACTIONS_TYPE.CHANGE_MIN_VALUE,\r\n    minValue: string\r\n}\r\n\r\nexport const ChangeMinValue = (minValue: string): ChangeMinValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_MIN_VALUE,\r\n        minValue\r\n    }\r\n}\r\n\r\ntype ChangeMaxValueType = {\r\n    type: ACTIONS_TYPE.CHANGE_MAX_VALUE,\r\n    maxValue: string\r\n}\r\n\r\nexport const ChangeMaxValue = (maxValue: string): ChangeMaxValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_MAX_VALUE,\r\n        maxValue\r\n\r\n    }\r\n}\r\n\r\ntype ChangeCounterValueType = {\r\n    type: ACTIONS_TYPE.CHANGE_COUNTER_VALUE,\r\n}\r\n\r\nexport const ChangeCounterValue = (): ChangeCounterValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_COUNTER_VALUE,\r\n    }\r\n}\r\n\r\ntype ResetCounterValueType = {\r\n    type: ACTIONS_TYPE.RESET_COUNTER_VALUE\r\n}\r\n\r\nexport const ResetCounterValue = (): ResetCounterValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.RESET_COUNTER_VALUE,\r\n    }\r\n}\r\n\r\ntype SetSettingsType = {\r\n    type: ACTIONS_TYPE.SET_SETTINGS,\r\n}\r\n\r\nexport const SetSettings = (): SetSettingsType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_SETTINGS,\r\n    }\r\n}\r\n\r\nexport type ActionsType = ChangeMinValueType | ChangeMaxValueType | ChangeCounterValueType | SetSettingsType | ResetCounterValueType","import React from 'react';\r\nimport classes from \"./ButtonComponent.module.css\";\r\n\r\ntype ButtonComponentPropsType = {\r\n    title: string\r\n    disabled: boolean\r\n    callbackFn: () => void\r\n}\r\n\r\nexport function ButtonComponent(props: ButtonComponentPropsType) {\r\n\r\n    return(\r\n        <>\r\n            <button\r\n                className={props.disabled ? `${classes.button} ${classes.buttonDisabled}` : classes.button}\r\n                onClick={props.callbackFn}\r\n                disabled={props.disabled}\r\n            >\r\n                {props.title}\r\n            </button>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType, ChangeCounterValue, InitStateType, ResetCounterValue} from \"../redux/counter-reducer\";\r\nimport {ButtonComponent} from \"./common/ButtonComponent\";\r\nimport classes from './Counter.module.css'\r\nimport commonClasses from \"./common/Containers.module.css\";\r\n\r\nexport function Counter() {\r\n    const state = useSelector<AppStateType, InitStateType>(state => state.counterState)\r\n\r\n    const dispatch = useDispatch<Dispatch<ActionsType>>()\r\n\r\n    const incCounter = () => {\r\n        dispatch(ChangeCounterValue())\r\n    }\r\n\r\n    const resetCounter = () => {\r\n        dispatch(ResetCounterValue())\r\n    }\r\n\r\n    //elements display conditions\r\n    const errorText = Number(state.minValue) >= Number(state.maxValue) ? 'min value bigger then max value' : 'enter values and press set'\r\n\r\n    const spanDisplay = !state.setting_active\r\n        ? <span className={state.counter >= Number(state.maxValue) ? classes.errorRed : ''}>{state.counter}</span>\r\n        : <span className={Number(state.minValue) >= Number(state.maxValue) ? classes.errorRed : ''}>{errorText}</span>\r\n\r\n    const incButtonDisable = state.counter === Number(state.maxValue) || state.setting_active\r\n\r\n    const resetButtonDisable = state.setting_active\r\n\r\n    const displayClassName = state.setting_active ? `${commonClasses.upperContainer} ${classes.error}` : `${commonClasses.upperContainer} ${classes.displayContainer}`\r\n\r\n    return (\r\n        <div className={commonClasses.mainContainer}>\r\n            <div className={displayClassName}>\r\n                {spanDisplay}\r\n            </div>\r\n            <div className={commonClasses.bottomContainer}>\r\n                <ButtonComponent title={'INC'} disabled={incButtonDisable} callbackFn={incCounter}/>\r\n                <ButtonComponent title={'RESET'} disabled={resetButtonDisable} callbackFn={resetCounter}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './SuperInput.module.css'\r\n\r\ntype SuperInputPropsType = {\r\n    title: string\r\n    value: string\r\n    dataValue: \"minValue\" | \"maxValue\"\r\n    callbackFn: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    error: boolean\r\n}\r\n\r\nexport function SuperInput(props: SuperInputPropsType) {\r\n    return(\r\n        <div className={classes.inputContainer}>\r\n            <span>{props.title}</span>\r\n            <input\r\n                className={props.error ? `${classes.localInput} ${classes.localInputError}` : classes.localInput}\r\n                value={props.value}\r\n                data-value={props.dataValue}\r\n                onChange={props.callbackFn}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType, ChangeMaxValue, ChangeMinValue, SetSettings} from \"../redux/counter-reducer\";\r\nimport {ButtonComponent} from \"./common/ButtonComponent\";\r\nimport {SuperInput} from \"./common/SuperInput\";\r\nimport commonClasses from \"./common/Containers.module.css\";\r\nimport classes from './Settings.module.css'\r\n\r\nexport function Settings() {\r\n    const maxValue = useSelector<AppStateType, string>(state => state.counterState.maxValue)\r\n    const minValue = useSelector<AppStateType, string>(state => state.counterState.minValue)\r\n    const settings = useSelector<AppStateType, boolean>(state => state.counterState.setting_active)\r\n\r\n    const dispatch = useDispatch<Dispatch<ActionsType>>()\r\n\r\n    const changeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.value) {\r\n            const trigger: string = e.currentTarget.dataset.value\r\n            if (trigger === 'minValue') {\r\n                dispatch(ChangeMinValue(value))\r\n            } else {\r\n                dispatch(ChangeMaxValue(value))\r\n            }\r\n        }\r\n    }\r\n\r\n    const applySettings = () => {\r\n        dispatch(SetSettings())\r\n    }\r\n\r\n    //elements display conditions\r\n    const setButtonDisable = Number(minValue) >= Number(maxValue) || minValue === '' || maxValue === '' || !settings\r\n    const inputError = Number(minValue) >= Number(maxValue) || minValue === '' || maxValue === ''\r\n\r\n    return (\r\n        <div className={commonClasses.mainContainer}>\r\n            <div className={`${commonClasses.upperContainer} ${classes.inputsContainer}`}>\r\n                <SuperInput title={'min value'} value={minValue} dataValue={'minValue'} callbackFn={changeValue} error={inputError}/>\r\n                <SuperInput title={'max value'} value={maxValue} dataValue={'maxValue'} callbackFn={changeValue} error={inputError}/>\r\n            </div>\r\n            <div className={commonClasses.bottomContainer}>\r\n                <ButtonComponent title={'SET'} disabled={setButtonDisable} callbackFn={applySettings}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Counter} from \"./components/Counter\";\nimport {Settings} from \"./components/Settings\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Settings/>\n            <Counter/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counter-reducer\";\r\nimport {loadState, saveState} from \"./utils/localstorage-utils\";\r\n\r\nconst reducers = combineReducers({\r\n        counterState: counterReducer\r\n})\r\n\r\nexport const store = createStore(reducers, loadState())\r\n\r\nstore.subscribe(\r\n    () => {\r\n        saveState(store.getState())\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof store.getState>;\r\n\r\n//@ts-ignore\r\nwindow.store = store.getState();","import {AppStateType} from \"../store\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('app-state');\r\n        if (!serializedState) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state: AppStateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('app-state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}